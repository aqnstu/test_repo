name: Checking code, building an image and pushing to DH

on:
  pull_request:
    branches: [ main, master, dev, develop ]

jobs:
  check:

    runs-on: ubuntu-latest

    outputs:
      need_build: ${{ steps.fetch_changes.outputs.need_build }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3.5.2
    
    - name: Get Python changed files
      id: py-changes
      uses: tj-actions/changed-files@v36.0.17
      with:
        files: |
          *.py
          **/*.py
        separator: " "
    
    - name: Get env and docker changed files
      id: env-changes
      uses: tj-actions/changed-files@v36.0.17
      with:
        files: |
          *.env
          **/*.env
          ci/**
        separator: " "
    
    - id: fetch_changes
      run: echo "need_build=${{ steps.env-changes.outputs.any_changed }}" >> "$GITHUB_OUTPUT"
        
    - name: Set up Python 3.11
      if: steps.py-changes.outputs.any_changed == 'true'
      uses: actions/setup-python@v4.6.1
      with:
        python-version: "3.10"

    - name: Install dependencies for linter
      if: steps.py-changes.outputs.any_changed == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      if: steps.py-changes.outputs.any_changed == 'true'
      run: |
        flake8 ${{ steps.py-changes.outputs.all_changed_and_modified_files }} --count --select=E,F \
        --show-source --statistics
        flake8 ${{ steps.py-changes.outputs.all_changed_and_modified_files }} --count --exit-zero \
        --max-line-length=120 --indent-size 4 --max-complexity=20 --statistics --color=always

  build:
    needs: [ check ]
  
    if: ${{needs.check.outputs.need_build}} == 'true'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DH_USERNAME }}
          password: ${{ secrets.DH_TOKEN }}
      
      - name: Login to Docker Hub
        uses: cardinalby/export-env-action@2.1.0
        with:
            envFile: '.env'    
            expand: 'true'
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0
      
      - name: Build and push (RT only)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./ci/Dockerfile.rt
          push: true
          tags: ${{ env.REG }}/${{ env.SRV }}:${{ env.RT }}
